# -*- mode: snippet -*-
# name: glib header file
# key: glh
# group: glib
# --

/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
/* ${1:`(glib-initial)`} */
/* ${2:$1$(glib-class yas/text)} */

#ifndef __$1_H__
#define __$1_H__

#include <glib-object.h>

G_BEGIN_DECLS

#define ${1:$(glib-t text)}            (${1:$(downcase text)}_get_type())
#define $1(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), ${1:$(glib-t text)}, $2))
#define $1_CONST(obj)      (G_TYPE_CHECK_INSTANCE_CAST ((obj), ${1:$(glib-t text)}, $2 const))
#define $1_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass),  ${1:$(glib-t text)}, $2Class))
#define ${1:$(glib-is text)}(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ${1:$(glib-t text)}))
#define ${1:$(glib-is text)}_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass),  ${1:$(glib-t text)}))
#define $1_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj),  ${1:$(glib-t text)}, $2Class))

typedef struct _$2        $2;
typedef struct _$2Class   $2Class;
typedef struct _$2Private $2Private;

struct _$2
{
  ${3:GObject} parent;

  /*< private >*/
  $2Private *priv;
};

struct _$2Class
{
  $3Class parent_class;
};

GType ${1:$(downcase text)}_get_type (void) G_GNUC_CONST;

G_END_DECLS

#endif /* __$1_H__ */