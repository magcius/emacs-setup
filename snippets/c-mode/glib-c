# -*- mode: snippet -*-
# name: glib code file
# key: glc
# group: glib
# --

/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
/* ${1:`(glib-initial)`} */

#include <glib/gi18n.h>

#include "${1:$(glib-header text)}"

G_DEFINE_TYPE(${2:$1$(glib-class text)}, ${1:$(glib-fprefix text)}, ${3:G_TYPE_OBJECT})

struct _$2Private
{
  gpointer dummy;
};

enum
{
  PROP_0,
  LAST_PROP
};

static GParamSpec *gParamSpecs[LAST_PROP];

/**
 * ${1:$(glib-fprefix text)}_finalize:
 * @object: (in): A #$2.
 *
 * Finalizer for a #$2 instance.  Frees any resources held by
 * the instance.
 *
 * Returns: None.
 * Side effects: None.
 */
static void
${1:$(glib-fprefix text)}_finalize (GObject *object)
{
	G_OBJECT_CLASS(${1:$(glib-fprefix text)}_parent_class)->finalize(object);
}

/**
 * ${1:$(glib-fprefix text)}_class_init:
 * @klass: (in): A #$2Class.
 *
 * Initializes the #$2Class and prepares the vtable.
 *
 * Returns: None.
 * Side effects: None.
 */
static void
${1:$(glib-fprefix text)}_class_init ($2Class *klass)
{
	GObjectClass *object_class;

	object_class = G_OBJECT_CLASS(klass);
	object_class->finalize = ${1:$(glib-fprefix text)}_finalize;
	g_type_class_add_private(object_class, sizeof($2Private));
}

/**
 * ${1:$(glib-fprefix text)}_init:
 * @$(glib-inst text): (in): A #$2.
 *
 * Initializes the newly created #$2 instance.
 *
 * Returns: None.
 * Side effects: None.
 */
static void
${1:$(glib-fprefix text)}_init ($2 *${1:$(glib-inst text)})
{
	${1:$(glib-inst text)}->priv =
		G_TYPE_INSTANCE_GET_PRIVATE(${1:$(glib-inst text)},
		                            ${1:$(glib-type text)},
		                            $2Private);
}
