# -*- mode: snippet -*-
# name: glib code file
# key: glc
# group: glib
# --
/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
/* ${1:`(glib-initial)`} */
/* ${2:$1$(glib-class text)} */

#include <glib-object.h>

#include "${1:$(glib-header text)}"

G_DEFINE_TYPE($2, ${1:$(glib-fprefix text)}, ${3:G_TYPE_OBJECT})

#define ${1:(glib-no-ns text)}_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), ${1:$(glib-type text)},$2Private)

struct _$2Private
{
};

static GParamSpec *gParamSpecs[LAST_PROP];

/**
 * ${1:$(glib-fprefix text)}_finalize:
 * @object: (in): A #$2.
 *
 * Finalizer for a #$2 instance.  Frees any resources held by
 * the instance.
 */
static void
${1:$(glib-fprefix text)}_finalize (GObject *object)
{
  G_OBJECT_CLASS(${1:$(glib-fprefix text)}_parent_class)->finalize(object);
}

/**
 * ${1:$(glib-fprefix text)}_class_init:
 * @klass: (in): A #$2Class.
 *
 * Initializes the #$2Class and prepares the vtable.
 */
static void
${1:$(glib-fprefix text)}_class_init ($2Class *klass)
{
  GObjectClass *object_class = G_OBJECT_CLASS(klass);

  g_type_class_add_private(object_class, sizeof($2Private));

  object_class->finalize = ${1:$(glib-fprefix text)}_finalize;
}

/**
 * ${1:$(glib-fprefix text)}_init:
 * @${1$(glib-inst text)}: (in): A #$2.
 *
 * Initializes the newly created #$2 instance.
 */
static void
${1:$(glib-fprefix text)}_init ($2 *${1:$(glib-inst text)})
{
  ${1:$(glib-inst text)}->priv = ${1:(glib-no-ns text)}_PRIVATE(${1:$(glib-inst text)});
}
